using System;
using System.Runtime.InteropServices; // Required for DllImport
using System.Windows.Forms;
using System.Management;
using System.IO;

class Program
{
    [DllImport("kernel32.dll")]
    public static extern ulong GetTickCount64(); // Use Windows API instead

    static string GetUptime()
    {
        ulong uptime = GetTickCount64(); // Call Windows API
        TimeSpan time = TimeSpan.FromMilliseconds(uptime);
        return $"{time.Days} days, {time.Hours} hours, {time.Minutes} mins";
    }
    static void Main()
    {
        Console.OutputEncoding = System.Text.Encoding.UTF8;
        while (true)
        {
            Console.WriteLine($"System Uptime: {GetUptime()}");
            string currentDirectory = Directory.GetCurrentDirectory();
            Console.Write($"\n[{Environment.UserName}@{Environment.MachineName} {currentDirectory}]$ "); // Simulate terminal prompt
            string command = Console.ReadLine()?.Trim();

            if (string.IsNullOrWhiteSpace(command))
                continue;

            if (command == "neofetch")
            {
                Neofetch();
            }
            else if (command == "clear")
            {
                Console.Clear();
            }
            else if (command == "exit")
            {
                Console.WriteLine("Exiting WSBSD terminal.");
                break;
            }
            else
            {
                Console.WriteLine("Command not found.");
            }
        }
    }
    static string GetCPUInfo()
    {
        ManagementObjectSearcher mos = new ManagementObjectSearcher("SELECT * FROM Win32_Processor");
        foreach (ManagementObject mo in mos.Get())
        {
            return mo["Name"].ToString();
        }
        return "Unknown CPU";

    }
    static string GetRAMInfo()
    {
        ManagementObjectSearcher mos = new ManagementObjectSearcher("SELECT * FROM Win32_ComputerSystem");
        foreach (ManagementObject mo in mos.Get())
        {
            return $"{Math.Round(Convert.ToDouble(mo["TotalPhysicalMemory"]) / 1073741824, 2)} GB";
        }
        return "Unknown RAM";
    }
    static void Neofetch()
    {
        Console.WriteLine("Starting Neofetch..."); // Debug message
        string asciiLogo = @" 
        :#%%%%%%%%%%#*=-..                     ....:---=========--::...                     ..:=+*#%%%%%%%#:
        =%%%%%%%%%%%%%%%#*+-..            ..:-=*##%%%%%%%%%%%%%%%%%%%##*=-:..           ..:=*#%%%%%%%%%%%%%*
=%%%%%%%%%%%%%%%%%%%%#=:..   ..:-*#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#+-:..  ..:=*#%%%%%%%%%%%%%%%%%*
-%%%%%%%%%%%%%%%%%%%%##+:...-*#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%##+:.:+#%%%%%%%%%%%%%%%%%%%%%=
.*%%%%%%%%%%%%%%%%%#*:...=##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#*+*=:.:+##%%%%%%%%%%%%%%%%%%%%%%#.
 :%%%%%%%%%%%%%%%#+:..-*#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-.. .:+##%%%%%%%%%%%%%%%%%%%%%%%%%-.
 .=%%%%%%%%%%%%#=...=*#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#+. .-*#%%%%%%%%%%%%%%%%%%%%%%%%%%%+..
  .*%%%%%%%%%#+:..=#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#+. :*%%%%%%%%%%%%%%%%%%%%%%%%%%%%*.. 
   :#%%%%%%#*:..=#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*: :*%%%%%%%%%%%%%%%%%%%%%%%%%%%#:.  
   .:#%%%%#=..:*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#*..=%%%%%%%%%%%%%%%%%%%%%%%%%%#-.   
    .:#%#*-..=#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#+.:+%%%%%%%%%%%%%%%%%%%%%%%%#:.    
     .:#*..:*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#+.:+#%%%%%%%%%%%%%%%%%%%%%#-.     
      ....:#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*:.=#%%%%%%%%%%%%%%%%%%%#:.      
        .-#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#=.:*%%%%%%%%%%%%%%%%%#:...     
       .:#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#*-.-*#%%%%%%%%%%%%%*:.**:.    
      .:#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#*-.:+#%%%%%%%%%#=.:*#%*..   
     .:*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#*-..-+*#%%%%*-. .*%%%+.   
    ..+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#+-...::::..  .*%%%#=.  
    .:%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#+-:..    .=#%%%%#.. 
   ..*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#*+==+##%%%%%%=..
   .-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#:.
   .+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-.
   .#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%+.
   :#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#.
   -%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%.
   -%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%:
   -%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%:
   -%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%:
   -%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#.
   .#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*.
   .*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=.
   .=%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#:.
   ..#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%+..
    .=%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#:. 
    ..*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%+.  
     .:#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#:.  
      .-#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#:.   
       .=%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-.    
       ..=%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-..    
        ..=%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-..     
         ..-#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#:.       
           .:*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%+:.        
             .=#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-.          
              .:+#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#+:.           
                .-*#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#*:.             
                  .-*#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#+:.               
                    .:*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#+.                  
                      ..-*#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#*-..                   
                        ..:-*#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#*-..                      
                            ..-=*#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#*=:..                         
                                ..:=+*#%%%%%%%%%%%%%%%%%%%%%%%%##*+-:..                             
        ";
        string systemInfo = $@"
        User: {Environment.UserName}
        Machine: {Environment.MachineName}
        OS: FreeBSD 14.2-RELEASE On {Environment.OSVersion.VersionString}
        Kernel: FREEBSDKERNEL: FreeBSD 14-STABLE | BSDKENREL: 4.4BSDLite | UNIXKERNEL: Unix Kernel v7.0 | WSBSDKERNEL: WSBSD1.0.0.1
        Uptime: {GetUptime()}
        Shell: sh
        CPU: {GetCPUInfo()}
        RAM: {GetRAMInfo()} GB
        ";

        // 🛠️ **Updated printing method to prevent buffer overload**
        if (!Console.IsOutputRedirected)
        {
            string[] logoLines = asciiLogo.Split('\n');
            foreach (string line in logoLines)
            {
                Console.WriteLine(line);
                System.Threading.Thread.Sleep(10); // Slight delay to prevent buffer issues
            };
            Console.WriteLine("ASCII Logo Loaded."); // Debug message
        }
        Console.WriteLine(systemInfo);
        Console.ReadKey(); // Prevents console from closing immediately
    }
}
